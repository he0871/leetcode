class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        m = len(grid)
        n = len(grid[0])
        iMap = collections.defaultdict(tuple)
        def find(node):
            if not iMap[node]:
                return node
            return find(iMap[node])
        
        def union(island):
            y, x = island[0], island[1]
            up = None
            if y > 0 and grid[y-1][x] == '1':
                iMap[island] = (y-1,x)
                up = find((y-1, x))
                
            if x > 0 and grid[y][x-1] == '1':
                left = find((y, x-1))
                if up != left:
                    if not left:
                        iMap[(y, x-1)] = island
                    elif not up:
                        iMap[island] = (y, x-1)
                    else:
                        iMap[left] = island
             
        for i in range(m):
            for j in range(n):
                if grid[i][j] == '1':
                    iMap[(i,j)] = None
                    union((i, j))
                    #print(iMap)
        cnt = 0
        
        for item in iMap:
            if not iMap[item]:
                cnt += 1
        return cnt
                    
